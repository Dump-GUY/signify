ABSTRACT
--------
verify_sigs contains library functions to compute and validate hashes 
on different file types, and signatures on PECOFF Authenticode-signed
binaries.


DEPENDENCIES
------------
You need pyasn1 >=0.13b and M2Crypto to parse and validate signatures.
To exercise some demonstrator code, you may need pefile.
M2Crypto: http://chandlerproject.org/Projects/MeTooCrypto/
pyasn1: http://pyasn1.sourceforge.net/
pefile: http://code.google.com/p/pefile/


DETAILS
-------
Currently the following hashing methods are supported:
- generic files: 
  md5, sha1, sha256, sha512
- PE-COFF authenticode (windows executables, drivers, dll's, ...): 
  md5, sha1

Hopefully more will come over time, there are also some more pieces missing,
e.g. certificate chain validation methods. 

fingerprint.py
The actual library of hashing algorithms, deployable on 
'naked' client systems, running under python 2.7. See embedded docstrings
and tests for usage scenarios. Does not use third party libraries.

fingerprinter_test.py
set of tests on the fingerprinter, using pregenerated data.

generate_test_data.py
Run-once code supposed to be run by hand, creates some of the files
in test_data.

auth_data.py
Basic container for authenticode data, as represented in ASN.1 together
with accessor and validator functions.

pecoff_blob.py
Container for PECOFF format part of authenticode blobs, as provided
by the fingerprinter library in the SignedData structure.

validate_signature.py
Exercises authenticode validation routines.


THANKS
------
Many thanks to Darren and Michael for motivating me to work through tangled
standards.
Many thanks to Ero for pefile, and to Ilya Etingof for pyasn1, very useful
examples code for x509 and pkcs7 parsing, and finally for extending the 
parser to handle 'any' type!

Germano Caronni, 2011/5/11
caronni@google.com , gec@acm.org
